//!!!!!!!!!!
Setup React Tool

# Other
-> Setup nhanh mọi tools cơ bản:
-> npx eslint --init
-> npm i --save-dev prettier eslint-config-prettier eslint-plugin-prettier lint-staged husky @commitlint/config-conventional  @commitlint/cli
-> sửa file .eslintrc.js thành:
module.exports = {
    env: {
        browser: true,
        es2021: true,
        node: true,
    },
    extends: ["eslint:recommended", "plugin:react/recommended", "prettier"],
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: "latest",
        sourceType: "module",
    },
    plugins: ["react", "prettier"],
    settings: {
        react: {
            version: "detect",
        },
    },
    rules: {
        // "linebreak-style": ["error", process.platform === "win32" ? "windows" : "unix"],
        "linebreak-style": 0,
        quotes: ["error", "double"],
        semi: ["error", "always"],
        "no-unused-vars": [
            "warn",
            {
                vars: "all",
                varsIgnorePattern: "^_$", 
                argsIgnorePattern: "^_$", 
                ignoreRestSiblings: true, 
            },
        ],
        "no-console": "off", 
        "no-prototype-builtins": "off",
        "no-empty": "warn", 
        "react/prop-types": "off",
        "prettier/prettier": ["warn"],
    },
};
-> sửa file .prettierrc thành:
{
    "printWidth": 120,
    "singleQuote": false,
    "tabWidth": 4,
    "semi": true,
    "trailingComma": "es5"
}
-> sửa jsconfig.json thành:
{
    "compilerOptions": {
        "baseUrl": "."
    },
    "include": ["src"]
}
-> sửa .commitlintrc.js thành:
module.exports = { 
    extends: ["@commitlint/config-conventional"] 
};
-> thêm vào package.json:
 "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "lint:staged": "lint-staged",
    "postinstall": "husky install",
    "prepare": "husky install"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "git add ."
    ],
    "*.{ts,js,jsx,ts,tsx,json,yml,md}": [
      "prettier --write",
      "git add ."
    ]
  },
-> npx husky install -> npx husky add .husky/pre-commit "yarn lint-staged" -> npx husky add .husky/commit-msg "" -> sửa commit-msg của husky từ undefined thành: npx --no-install commitlint --edit "$1"
=> Dùng thêm format on save nếu k sợ lag với prettier extension

-> thêm .prettierignore:
**/*.svg
package.json
/dist
/build
.dockerignore
.DS_Store
.eslintignore
*.png
*.toml
docker
.editorconfig
Dockerfile*
.gitignore
.prettierignore
LICENSE
.eslintcache
*.lock
yarn-error.log
.history
CNAME

-> thêm .eslintignore:
/build/**
!.eslintrc.js

-> thêm .gitignore:
# dependencies
/node_modules
/.pnp
.pnp.js
# testing
/coverage
# production
/build
# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local
npm-debug.log*
yarn-debug.log*
yarn-error.log*
/.vscode

-> Tool khác: stylelint + stylelint-config-recommended => tool này k cần thiết trong các dự án mà k chú trọng cho style file css
Cách dùng: npm i styleint stylelint-config-recommended -> thêm vào package.json: "stylelint:check": "stylelint \"src/**/*.css\"" -> tạo .stylelintrc.json và thêm style -> mỗi khi dùng thì npm run stylelint:check -> nếu muốn tự động với pre-commit thì thêm vào package.json:
"husky": {
    "hooks": {
      "pre-commit": "stylelint:check"
    }
}
Tương tự có tslint format typescript

